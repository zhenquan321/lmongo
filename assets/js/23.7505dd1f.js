(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{330:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"javascript-基础问题"}},[t._v("JavaScript 基础问题")]),t._v(" "),s("ul",[s("li",[s("router-link",{attrs:{to:"/node/common.html#类型判断"}},[s("code",[t._v("[Basic]")]),t._v(" 类型判断")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/common.html#作用域"}},[s("code",[t._v("[Basic]")]),t._v(" 作用域")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/common.html#引用传递"}},[s("code",[t._v("[Basic]")]),t._v(" 引用传递")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/common.html#内存释放"}},[s("code",[t._v("[Basic]")]),t._v(" 内存释放")])],1),t._v(" "),s("li",[s("router-link",{attrs:{to:"/node/common.html#es6-新特性"}},[s("code",[t._v("[Basic]")]),t._v(" ES6 新特性")])],1)]),t._v(" "),s("h2",{attrs:{id:"简述"}},[t._v("简述")]),t._v(" "),s("p",[t._v("与前端 Js 不同, 后端方面除了SSR/爬虫之外很少会接触 DOM, 所以关于 DOM 方面的各种知识基本不会讨论. 浏览器端除了图形业务外很少碰到内存问题, 但是后端几乎是直面服务器内存的, 更加偏向内存方面, 对于一些更基础的问题也会更加关注.")]),t._v(" "),s("p",[t._v("不过由于 Js 方面的知识点实在太多, 《JavaScript 权威指南》的厚度完全可以说明问题, 所以本教程并不会完整的带大家过一遍 Js 的基础问题, 只是简单列举一些饿了么在面试 Node.js 程序的时候通常会问的一些 Js 基础问题, 有的详细的地方会直接留下书名或者博文链接, 以供大家深入了解, 这里就不赘述了.")]),t._v(" "),s("blockquote",[s("p",[t._v("希望大家更多的是带着本文抛出的问题去学习, 而不是期待本文把所有答案列出来.")])]),t._v(" "),s("h2",{attrs:{id:"类型判断"}},[t._v("类型判断")]),t._v(" "),s("p",[t._v("JavaScript 的类型判断其实是个挺折磨人的话题, 不然也不会有 TypeScript 出现了. 在类型判断的问题上, 基础上 推荐阅读 "),s("a",{attrs:{href:"https://github.com/lodash/lodash",target:"_blank",rel:"noopener noreferrer"}},[t._v("lodash"),s("OutboundLink")],1),t._v(" 的源代码.")]),t._v(" "),s("p",[t._v("这类问题一般只是面试过程中简单的开场, 当然不会因为你不知道 "),s("code",[t._v("undefined == null")]),t._v(" 的结果是 "),s("code",[t._v("true")]),t._v(" 就一票否决一个人. 只是根据个人经验看来，这个问题答不清楚的有不小的概率属于基础较差. 如果你对这种问题没有任何概念, 也许要反思一下是不是该找本书过一下 Js 的基础了.")]),t._v(" "),s("p",[t._v("另外在这个问题上, 对熟悉 TypeScript 以及 flow 同学会有一定的加分.")]),t._v(" "),s("h2",{attrs:{id:"作用域"}},[t._v("作用域")]),t._v(" "),s("p",[t._v("在面试时, 作用域并不是一个很好问的知识点但实际上这 JavaScript 中一个很重要的点. 饿厂一般开篇会问的是 "),s("code",[t._v("es6 中 let 与 var 的区别")]),t._v(" 这一类问题, 或者列举代码, 然后通过对代码的解读来看你对作用域的掌握.")]),t._v(" "),s("p",[t._v("关于作用域的问题"),s("a",{attrs:{href:"https://book.douban.com/subject/26351021/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《你不知道的 JavaScript》"),s("OutboundLink")],1),t._v(" 讲的很好, 推荐细读, 以下是该书的部分目录，各位可以感受一下:")]),t._v(" "),s("ul",[s("li",[t._v("第1章 作用域是什么")]),t._v(" "),s("li",[t._v("第2章 词法作用域")]),t._v(" "),s("li",[t._v("第3章 函数作用域和块作用域")]),t._v(" "),s("li",[t._v("第4章 提升")]),t._v(" "),s("li",[t._v("第5章 作用域闭包")]),t._v(" "),s("li",[t._v("...")])]),t._v(" "),s("h2",{attrs:{id:"引用传递"}},[t._v("引用传递")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{name:"q-value"}}),t._v(" js 中什么类型是引用传递, 什么类型是值传递? 如何将值类型的变量以引用的方式传递?")])]),t._v(" "),s("p",[t._v("简单点说, 对象是引用传递, 基础类型是值传递, 通过将基础类型包装 (boxing) 可以以引用的方式传递.(复杂见注①)")]),t._v(" "),s("p",[t._v("引用传递和值传递是一个非常简单的问题, 也是理解 JavaScript 中的内存方面问题的一个基础. 如果不了解引用可能很难去看很多问题.")]),t._v(" "),s("p",[t._v("面试写代码的话, 可以通过 "),s("code",[t._v("如何编写一个 json 对象的拷贝函数")]),t._v(" 等类似的问题来考察对引用的了解.\n不过笔者偶尔会有恶趣味, 喜欢先问应聘者对于 "),s("code",[t._v("==")]),t._v(" 的 "),s("code",[t._v("===")]),t._v(" 的区别的了解. 然后再问 "),s("code",[t._v("[1] == [1]")]),t._v(" 是 "),s("code",[t._v("true")]),t._v(" 还是 "),s("code",[t._v("false")]),t._v(". 如果基础不好的同学可能会被自己对于 "),s("code",[t._v("==")]),t._v(" 和 "),s("code",[t._v("===")]),t._v(" 的结论影响然后得出错误的结论.")]),t._v(" "),s("p",[t._v("注①: 对于技术好的, 希望能直接反驳这个问题本身是有问题的, 比如讲清楚 JavaScript 中没有引用传递只是传递引用. 参见 "),s("a",{attrs:{href:"http://stackoverflow.com/questions/518000/is-javascript-a-pass-by-reference-or-pass-by-value-language",target:"_blank",rel:"noopener noreferrer"}},[t._v("Is JavaScript a pass-by-reference or pass-by-value language?"),s("OutboundLink")],1),t._v(". 虽然说是复杂版, 但是这些知识对于 3年经验的同学真的应该是很简单的问题了.")]),t._v(" "),s("p",[t._v("另外如果简历中有写 C++, 则必问 "),s("code",[t._v("指针与引用的区别")]),t._v(".")]),t._v(" "),s("h2",{attrs:{id:"内存释放"}},[t._v("内存释放")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{name:"q-mem"}}),t._v(" JavaScript 中不同类型以及不同环境下变量的内存都是何时释放?")])]),t._v(" "),s("p",[t._v("引用类型是在没有引用之后, 通过 v8 的 GC 自动回收, 值类型如果是处于闭包的情况下, 要等闭包没有引用才会被 GC 回收, 非闭包的情况下等待 v8 的新生代 (new space) 切换的时候回收.")]),t._v(" "),s("p",[t._v("与前端 Js 不同, 2年以上经验的 Node.js 一定要开始注意内存了, 不说对 v8 的 GC 有多了解, 基础的内存释放一定有概念了, 并且要开始注意内存泄漏的问题了.")]),t._v(" "),s("p",[t._v("你需要了解哪些操作一定会导致内存泄漏, 或者可以崩掉内存. 比如如下代码能否爆掉 V8 的内存?")]),t._v(" "),s("div",{staticClass:"language-javaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("然后上述代码与下方的情况有什么区别?")]),t._v(" "),s("div",{staticClass:"language-javaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("如果 push 的是 "),s("code",[t._v("Buffer")]),t._v(" 情况又会有什么区别?")]),t._v(" "),s("div",{staticClass:"language-javaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  arr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("思考完之后可以尝试找找别的情况如何爆掉 V8 的内存. 以及来聊聊内存泄漏?")]),t._v(" "),s("div",{staticClass:"language-javaScript line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("out")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" bigData "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Buffer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("inner")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" bigData"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[t._v("闭包会引用到父级函数中的变量，如果闭包未释放，就会导致内存泄漏。上面例子是 inner 直接挂在了 root 上，从而导致内存泄漏（bigData 不会释放）。详见"),s("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/25736931",target:"_blank",rel:"noopener noreferrer"}},[t._v("《如何分析 Node.js 中的内存泄漏》"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("对于一些高水平的同学, 要求能清楚的了解 v8 内存 GC 的机制, 懂得内存快照等 (之后会在"),s("code",[t._v("调试/优化")]),t._v("的小结中讨论) 了. 比如 V8 中不同类型的数据存储的位置, 在内存释放的时候不同区域的不同策略等等.")]),t._v(" "),s("h2",{attrs:{id:"es6-新特性"}},[t._v("ES6 新特性")]),t._v(" "),s("p",[t._v("推荐阅读阮一峰的 "),s("a",{attrs:{href:"http://es6.ruanyifeng.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("《ECMAScript 6 入门》"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("比较简单的会问 "),s("code",[t._v("let")]),t._v(" 与 "),s("code",[t._v("var")]),t._v(" 的区别, 以及 "),s("code",[t._v("箭头函数")]),t._v(" 与 "),s("code",[t._v("function")]),t._v(" 的区别等等.")]),t._v(" "),s("p",[t._v("深入的话, es6 有太多细节可以深入了. 比如结合 "),s("code",[t._v("引用")]),t._v(" 的知识点来询问 "),s("code",[t._v("const")]),t._v(" 方面的知识. 结合 "),s("code",[t._v("{}")]),t._v(" 的使用与缺点来谈 "),s("code",[t._v("Set, Map")]),t._v(" 等. 比如私有化的问题与 "),s("code",[t._v("symbol")]),t._v(" 等等.")]),t._v(" "),s("p",[t._v("其他像是 "),s("code",[t._v("闭包是什么?")]),t._v(" 这种问烂了问题已经感觉没必要问了, 取而代之的是询问闭包应用的场景更加合理. 比如说, 如果回答者通常使用闭包实现数据的私有, 那么可以接着问 es6 的一些新特性 (例如 "),s("code",[t._v("class")]),t._v(", "),s("code",[t._v("symbol")]),t._v(") 能否实现私有, 如果能的话那为什么要用闭包? 亦或者是什么闭包中的数据/私有化的数据的内存什么时候释放? 等等.")]),t._v(" "),s("p",[s("code",[t._v("...")]),t._v(" 的使用上, 如何实现一个数组的去重 (使用 Set 可以加分).")]),t._v(" "),s("blockquote",[s("p",[s("a",{attrs:{name:"q-const"}}),t._v(" const 定义的 Array 中间元素能否被修改? 如果可以, 那 const 修饰对象有什么意义?")])]),t._v(" "),s("p",[t._v("其中的值可以被修改. 意义上, 主要保护引用不被修改 (如用 "),s("a",{attrs:{href:"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"}},[t._v("Map"),s("OutboundLink")],1),t._v(" 等接口对引用的变化很敏感, 使用 const 保护引用始终如一是有意义的), 也适合用在 immutable 的场景.")]),t._v(" "),s("p",[t._v("暂时写上这些, 之后会慢慢整理, 如果内容比较多可能单独归一类来讨论.")])])},[],!1,null,null,null);e.options.__file="common.md";a.default=e.exports}}]);